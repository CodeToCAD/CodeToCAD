[
    {
        "name": "Fillets and Chamfers",
        "description": "You can apply fillets and chamfers to specific edges or faces, or to all the edges or faces. To target a specific edge or face, create a Landmark near the target.",
        "codeFilepath": "filletsAndChamfers.py",
        "imagePath": ""
    },
    {
        "name": "Text",
        "description": "Use Sketch('sketchName').createText() to write text. You can apply different text fonts, decorations and sizes. You can also extrude text, or define landmarks relative to the Sketch to mate/joint text to other landmarks.",
        "codeFilepath": "text.py",
        "imagePath": ""
    },
    {
        "name": "Calibration Cube",
        "description": "Calibration Cubes uses Landmarks on both the Texts' Sketches and the Cube to define where the Text is positioned on the Cube. ",
        "codeFilepath": "calibrationCube.py",
        "imagePath": ""
    },
    {
        "name": "Patterns",
        "description": "Use linear and circular patterns to create more of a Part or a Sketch. Note: the Hole method also allows you to pattern holes.",
        "codeFilepath": "patterning.py",
        "imagePath": ""
    },
    {
        "name": "Materials",
        "description": "Apply a material to Parts by creating a Material, and then assigning it to a Part.",
        "codeFilepath": "stackingCubes.py",
        "imagePath": "https://raw.githubusercontent.com/CodeToCAD/CodeToCAD/develop/docs/materialCube.png"
    },
    {
        "name": "Stacking Cubes",
        "description": "Cubes and other Entities can be positioned relative to one another using Landmarks.",
        "codeFilepath": "stackingCubes.py",
        "imagePath": "https://raw.githubusercontent.com/CodeToCAD/CodeToCAD/develop/docs/stackedCubes.png"
    },
    {
        "name": "D-Shaft Knob",
        "description": "An example that uses the Hole modifier.",
        "codeFilepath": "dShaftKnob.py",
        "imagePath": ""
    },
    {
        "name": "Bracelet",
        "description": "You can use the boolean modifiers Subtract, Union and Intersect to manipulate parts.",
        "codeFilepath": "bracelet.py",
        "imagePath": ""
    },
    {
        "name": "Ball Joint",
        "description": "Parts can be mated/jointed using Landmarks and Joints.",
        "codeFilepath": "ballJoint.py",
        "imagePath": ""
    },
    {
        "name": "Simple Humanoid",
        "description": "",
        "codeFilepath": "simpleHumanoid.py",
        "imagePath": ""
    },
    {
        "name": "Import and Export",
        "description": "You can import files by using the createFromFile() method, and export Entities using the export() method. The filename extension will be used to guess the filetype, but you can specify a filetype too.",
        "codeFilepath": "importExport.py",
        "imagePath": ""
    }
]