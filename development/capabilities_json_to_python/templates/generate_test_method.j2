{# capabilities_method is a class instance of CapabilitiesMethod #}

{%macro generate_test_parameters(capabilities_loader, capabilities_method, parameter) -%}

        {%-set default_value = '"'+ parameter.default_value+'"' if parameter.default_value and parameter.default_value is string else  parameter.default_value|string -%}
        {%-set default_value = default_value if parameter.default_value is not none else "None" -%}

        {%-set type_mock_value = parameter.type_mock_value if parameter.type_mock_value is not none else "value" %}
        {# {%-set type_mock_value = '"'+ type_mock_value+'"' if type_mock_value is string else  type_mock_value|string -%} #}

        {{ parameter.name }} =
        {{- default_value if parameter.default_value is not none else type_mock_value|string -}} 
{%- endmacro %}

{%macro generate_test_method(capabilities_loader, capabilities_class, capabilities_method, use_abstract_method_decorator) %}

    {{"@skip('TODO')\n    " if not use_abstract_method_decorator }}
    {{"@abstractmethod\n    " if use_abstract_method_decorator }}
    def test_{{capabilities_method.name}}(self):
        {% if use_abstract_method_decorator %}
        pass
        {%else%}
        instance = {{capabilities_class.name}}(
        {% set parameters = capabilities_loader.get_constructor_parameters_for_class(capabilities_class.name)%}
        {%for parameter in parameters -%} 
        {{generate_test_parameters(capabilities_loader, capabilities_method, parameter)}}
        {{-", " if not loop.last}} 
        {%-endfor%}
        )

        value = instance.{{capabilities_method.name}}(
        {%for parameter in capabilities_method.parameters -%} 
        {{generate_test_parameters(capabilities_loader, capabilities_method, parameter)}}
        {{-", " if not loop.last}} 
        {%-endfor%}
        )

        {% if capabilities_method.action == "get" %}
        assert value, "Get method failed."
        {%elif capabilities_method.action == "create"%}
        assert value.is_exists(), "Create method failed."
        {%elif capabilities_method.action == "modify"%}
        assert value, "Modify method failed."
        {%endif%}
        {%endif%}

{% endmacro %}