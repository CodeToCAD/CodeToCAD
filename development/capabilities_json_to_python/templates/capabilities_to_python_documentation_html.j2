<!DOCTYPE html>
<html>

<head>
    <title>CodeToCAD Reference Sheet</title>
    <style>
        @media print {
            .pagebreak {
                page-break-before: always;
            }
        }

        body {
            -webkit-text-size-adjust: 100%;
            font-family: Lato, proxima-nova, Helvetica Neue, Arial, sans-serif;
            color: #555;
        }

        header {
            margin-top: 20px;
            margin-bottom: 20px;
        }

        .grid-container {
            display: grid;
            gap: 2rem;

                {
                # grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
                #
            }
        }

        .grid-container-parameters {
            display: grid;
            gap: 2rem;
            grid-template-columns: 200px auto;
        }

        .grid-item {
            padding: 5px;
        }

        .class_name {
            list-style: none;
            list-style-image: none;
            font-weight: 700;
            font-size: 110%;
            line-height: normal;
            color: #2980b9;
            box-sizing: border-box;
        }

        .method_name {
            font-family: Lato, proxima-nova, Helvetica Neue, Arial, sans-serif;
            list-style: none;
            list-style-image: none;
            box-sizing: border-box;
            font-weight: 700;
            display: table;
            margin: 6px 0;
            font-size: 90%;
            line-height: normal;
            padding: 6px;
            position: relative;
            margin-top: 0;
            margin-bottom: 6px;
            border: none;
            border-left: 3px solid #ccc;
            background: #f0f0f0;
            color: #555;
        }

        .methods {
            padding: 6px;
            margin: 6px 0;
            font-size: 90%;

        }

        .subHeading {
            -webkit-text-size-adjust: 100%;
            font-size: 16px;
            font-family: Lato, proxima-nova, Helvetica Neue, Arial, sans-serif;
            color: #404040;
            line-height: 24px;
            list-style: none;
            list-style-image: none;
            box-sizing: border-box;
            font-weight: 700;
            margin-bottom: 0;
        }

        .subSubHeading {
            -webkit-text-size-adjust: 100%;
            font-size: 12px;
            font-family: Lato, proxima-nova, Helvetica Neue, Arial, sans-serif;
            color: #404040;
            line-height: 24px;
            list-style: none;
            list-style-image: none;
            box-sizing: border-box;
            font-weight: 700;
            margin-bottom: 0;
        }

        a {
            text-decoration: none;
            color: inherit;
        }

        .selectedChip {
            background: #2980b9 !important;
            background-position: bottom center !important;
        }

        .supportedChip {
            background: #29b933 !important;
            background-position: bottom center !important;
        }

        .supportedPartialChip {
            background: #b9aa29 !important;
            background-position: bottom center !important;
        }

        .notSupportedChip {
            background: #b92e29 !important;
            background-position: bottom center !important;
        }

        .plannedSupportChip {
            background: #b96529 !important;
            background-position: bottom center !important;
        }

        .chip {
            display: inline-block;
            padding: 0 10px;
            margin-bottom: 2px;
            line-height: 25px;
            border-radius: 25px;
            background-color: #f1f1f1;
            cursor: pointer;
            background: linear-gradient(to bottom, #f1f1f1 50%, #2980b9 50%);
            background-size: 100% 200%;
            background-position: right top;
            transition: all 0.5s ease;
        }

        .chip:hover {
            background-position: right bottom;
            text-decoration: underline;
        }
    </style>

    <script>
        const urlParams = new URLSearchParams(window.location.search);
        const provider = urlParams.get('provider');

        const supported_providers = {{ supported_providers| tojson | safe }}

        const support_map = {
            UNSUPPORTED: "notSupportedChip",
            PLANNED: "plannedSupportChip",
            PARTIAL: "supportedPartialChip",
            SUPPORTED: "supportedChip"
        }

        function addSupportedClassToChip(className, methods) {

            for (const method in methods) {

                const chip = document.getElementById("chip_" + className + "_" + method)

                const supportedLevel = supported_providers[provider][className][method].SupportLevel

                chip.classList.value = "chip chipsItem " + support_map[supportedLevel]
            }

        }

        function addSupportedClassToEntityChip(className, methods) {
            // A goofy cheat to target the extended methods from Entity

            for (const method in methods) {

                const chip = document.getElementById("chip_" + className + "_" + method)

                if (!chip) continue

                const supportedLevel = supported_providers[provider]["Entity"][method].SupportLevel

                chip.classList.value = "chip chipsItem " + support_map[supportedLevel]
            }

        }

        window.onload = function () {

            if (provider) {
                document.getElementById(`filter-${provider}`).classList.add("selectedChip")

                for (const className in supported_providers[provider]) {

                    if (className == "Entity") continue

                    addSupportedClassToChip(className, supported_providers[provider][className])

                    addSupportedClassToEntityChip(className+"-"+"Entity", supported_providers[provider]["Entity"])

                }
            }
        }
    </script>
</head>

<body>
    {# MARK: Methods Chips View macros #}

    {% macro methodsChipsView(class_name, capabilities_class) -%}

    {% for capabilities_method in capabilities_class.methods %}

    <a href="#{{class_name}}_{{capabilities_method.name}}" class="chip chipsItem"
        id="chip_{{class_name}}_{{capabilities_method.name}}">{{capabilities_method.name}}()</a>

    {% endfor %}

    {%- endmacro %}

    {# MARK: Methods Parameters macros #}

    {% macro methodsParametersView(class_name, capabilities_class) -%}

    {% for capabilities_method in capabilities_class.methods %}

    {{class_name}}::<span class="subHeading"
        id={{class_name}}_{{capabilities_method.name}}>{{capabilities_method.name}}({{
        capabilities_method.parameters_names|join(',
        ') }})</span>

    {% if capabilities_method.information -%}
    <div class="methods">{{- capabilities_method.information -}}</div>
    {%-endif%}
    {% if capabilities_method.return_type is not none -%}
    <div><span class="subSubHeading">returnType:</span> {{capabilities_method.return_type -}}</div>
    {%-endif%}
    {% for parameter in capabilities_method.parameters %}

    <div class="methods grid-container-parameters">
        <div class="method_name grid-item">{{parameter.name}}</div>
        <div class="grid-item">
            {% if parameter.information -%}
            <div><span class="subSubHeading">Information:</span> {{parameter.information -}}</div>
            {%-endif%}
            {% if parameter.type -%}
            <div><span class="subSubHeading">Type:</span> {{parameter.type -}}</div>
            {%-endif%}
            {% if parameter.default_value -%}
            <div><span class="subSubHeading">Default Value:</span> {{ parameter.default_value -}}</div>
            {%-endif%}
            {% if parameter.required == false -%}
            <div><span class="subSubHeading">Required:</span> false</div>
            {%-endif%}
            {% if parameter.type_mock_value is not none -%}
            <div><span class="subSubHeading">Example:</span> {{parameter.type_mock_value}}</div>
            {%-endif%}
        </div>
    </div>


    {% endfor %}

    {% endfor %}

    {%- endmacro %}

    {# MARK: Header: #}
    <header>
        <h2 style="margin: 0;">CodeToCAD Reference Sheet</h2>
        <div>
            Repo: <a href="https://github.com/CodeToCAD/CodeToCAD">https://github.com/CodeToCAD/CodeToCAD</a></div>
        <div>
            Examples: <a
                href="https://codetocad.github.io/CodeToCAD/examples.html">https://codetocad.github.io/CodeToCAD/examples.html</a>
        </div>
    </header>

    <div>

        {% for key in supported_providers %}
        <a href="?provider={{key}}" class="chip" id="filter-{{key}}">{{key}}</a>
        {%endfor%}

    </div>

    {# MARK: Cheat Sheet grids: #}

    <div class="grid-container">
        {% for class_name, capabilities_class in capabilities_loader.capabilities.items() -%}
        {% if class_name == "Entity" or capabilities_class.is_interface_only %}

        {# Do nothing #}

        {%- else %}

        <div class="grid-item">
            <span class="class_name">{{class_name}}</span>
            {% if capabilities_class.information -%}
            <div class="subHeading">{{- capabilities_class.information -}}</div>
            {%-endif%}

            {{methodsChipsView(class_name, capabilities_class)}}



            {%for extends_class_name in capabilities_class.extends %}

            {{methodsChipsView(class_name+"-"+extends_class_name, capabilities_loader.capabilities[extends_class_name]
            )}}

            {%endfor%}


            {%for implements_class_names in capabilities_class.implements %}

            {{methodsChipsView(class_name, capabilities_loader.capabilities[implements_class_names] )}}

            {%endfor%}

        </div>
        {%-endif-%}

        {% endfor -%}
    </div>
    <div class="pagebreak"> </div>

    {# MARK: Methods documentation: #}

    <header>
        <h2 style="margin: 0;">Documentation</h2>
    </header>

    <div>
        {% for class_name, capabilities_class in capabilities_loader.capabilities.items() -%}
        {% if class_name == "Entity" or capabilities_class.is_interface_only %}

        {# Do nothing #}

        {%- else %}

        <div>
            <span class="class_name">{{class_name}}</span>
            {% if capabilities_class.information -%}
            <div class="subHeading">{{- capabilities_class.information -}}</div>
            {%-endif%}

            <div class="methods">

                {{methodsParametersView(class_name, capabilities_class)}}


                {%for extends_class_name in capabilities_class.extends %}

                {{methodsParametersView(class_name+"-"+extends_class_name,
                capabilities_loader.capabilities[extends_class_name] )}}

                {%endfor%}

                {%for implements_class_names in capabilities_class.implements %}
                {{methodsParametersView(class_name, capabilities_loader.capabilities[implements_class_names] )}}
                {%endfor%}


            </div>

        </div>
        {%-endif-%}

        {% endfor -%}
    </div>

</body>

</html>