{#
This Jinja2 Template requires the following parameters:
- className
- methods
- superParameters, e.g. the ["constructor"]["parameters"] of the class this class extends.
#}
# THIS IS AN AUTO-GENERATE FILE.
# DO NOT EDIT MANUALLY.
# Please run development/capabilitiesJsonToPython/capabilitiesToPy.sh to generate this file.

from abc import ABCMeta, abstractmethod
from codetocad.codetocad_types import *
{%set extendedClassesWithSuffixes = []-%}
{% if "extends" in methods%}
{%set extendedClasses = methods["extends"]-%}
{% for extendedClass in extendedClasses.split(",") -%}
{%set extendedClassWithSuffix = extendedClass + classNameSuffix-%}
{%- set extendedClassesWithSuffixes = extendedClassesWithSuffixes.append(extendedClassWithSuffix)-%}
from codetocad.interfaces import {{extendedClassWithSuffix}}
{% endfor-%}
{%-endif%}

{%-set useAbstractMethodDecorator = True%}

class {{className+classNameSuffix}}({{extendedClassesWithSuffixes|join(",") + (", " if extendedClassesWithSuffixes|length > 0 else "")-}}metaclass=ABCMeta):
    {% if "information" in methods -%}
    '''
    {{- methods["information"] -}}
    '''
    {%-endif%}
{% include 'capabilitiesToPyClassDefinition.j2' %}